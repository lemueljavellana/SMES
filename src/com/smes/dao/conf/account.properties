#SQL Statements
unpaid.account.sql.select= SELECT T1.ACCOUNT_ID, T1.CUSTOMER_ID, T1.ACCOUNT_DATE, T1.DUE_DATE, T1.REFERENCE_NUMBER, T1.DESCRIPTION, T1.AMOUNT, \
        T1.INTEREST_EARNED, T1.INTEREST_EARNED + T1.AMOUNT AS TOTAL, SUM(RT.TOTAL) AS RUNNING_TOTAL
unpaid.account.sql.from=FROM ( \
        SELECT ACCOUNT_ID, ACCOUNT_DATE, DUE_DATE, REFERENCE_NUMBER, DESCRIPTION, AMOUNT, \
            CUSTOMER_ID, 0 AS INTEREST_EARNED \
        FROM ACCOUNT \
        WHERE DUE_DATE >= NOW() and CUSTOMER_ID = ? \
        UNION all \
        SELECT T1.ACCOUNT_ID, T1.ACCOUNT_DATE, T1.DUE_DATE, T1.REFERENCE_NUMBER, \
              T1.DESCRIPTION, T1.AMOUNT, T1.CUSTOMER_ID, \
              (T1.AMOUNT * (CP.DAILY_INTEREST * DATEDIFF(NOW(),T1.DUE_DATE))) AS INTEREST_EARNED \
        from ACCOUNT AS T1 \
        INNER JOIN  (SELECT CUSTOMER_ID, INTEREST, (((INTEREST/100) *12) / 365.25) AS DAILY_INTEREST \
               from CUSTOMER_PREF) AS CP \
        on T1.CUSTOMER_ID = CP.CUSTOMER_ID \
        WHERE T1.DUE_DATE < NOW() and T1.CUSTOMER_ID = ?) AS T1 \
INNER JOIN (SELECT ACCOUNT_ID, ACCOUNT_DATE, DUE_DATE, REFERENCE_NUMBER, DESCRIPTION, AMOUNT, \
        CUSTOMER_ID, INTEREST_EARNED, INTEREST_EARNED + AMOUNT AS TOTAL FROM ( \
        SELECT ACCOUNT_ID, ACCOUNT_DATE, DUE_DATE, REFERENCE_NUMBER, DESCRIPTION, AMOUNT, \
            CUSTOMER_ID, 0 AS INTEREST_EARNED \
        FROM ACCOUNT \
        WHERE DUE_DATE >= NOW() and CUSTOMER_ID = ? \
        UNION all \
        SELECT T1.ACCOUNT_ID, T1.ACCOUNT_DATE, T1.DUE_DATE, T1.REFERENCE_NUMBER, \
              T1.DESCRIPTION, T1.AMOUNT, T1.CUSTOMER_ID, \
              (T1.AMOUNT * (CP.DAILY_INTEREST * DATEDIFF(NOW(),T1.DUE_DATE))) AS INTEREST_EARNED \
        from ACCOUNT AS T1 \
        INNER JOIN  (SELECT CUSTOMER_ID, INTEREST, (((INTEREST/100) *12) / 365.25) AS DAILY_INTEREST \
               from CUSTOMER_PREF) AS CP \
        on T1.CUSTOMER_ID = CP.CUSTOMER_ID \
        WHERE T1.DUE_DATE < NOW() and T1.CUSTOMER_ID = ?) AS t2) AS RT \
ON T1.ACCOUNT_DATE >= RT.ACCOUNT_DATE \
WHERE T1.ACCOUNT_ID NOT IN (SELECT ACCOUNT_ID FROM PAID_ACCOUNT) \
GROUP BY T1.ACCOUNT_ID \
ORDER BY T1.ACCOUNT_DATE